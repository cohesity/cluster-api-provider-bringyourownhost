name: CI

on:
  push:
    branches: [main]
    paths-ignore:
      - "*.md"
      - "docs/**"
      - "LICENSE"
      - "NOTICE"
      - "PROJECT"
      - "SECURITY_CONTACTS"
  pull_request:
    branches: [main]
    paths-ignore:
      - "*.md"
      - "docs/**"
      - "LICENSE"
      - "NOTICE"
      - "PROJECT"
      - "SECURITY_CONTACTS"

jobs:
  build-agent:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "./go.mod"

      - uses: bazel-contrib/setup-bazel@4fd964a13a440a8aeb0be47350db2fc640f19ca8 # 0.15.0
        with:
          # Avoid downloading Bazel every time.
          bazelisk-cache: true
          # Store build cache per workflow.
          disk-cache: ${{ github.workflow }}
          # Share repository cache between workflows.
          repository-cache: true

      - name: build agent
        run: bazel build host-agent-binaries

  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Check Docker Version
        run: docker --version

      - name: Uninstall podman if installed
        run: sudo apt-get purge podman && sudo rm -rf /etc/cni/net.d/

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: turn off swap
        run: sudo swapoff -a

      - name: Set netfilter conntrack max
        run: sudo sysctl -w net.netfilter.nf_conntrack_max=131072

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "./go.mod"

      - name: Install ginkgo
        run: go install github.com/onsi/ginkgo/v2/ginkgo

      - name: Install prequisit packages
        run: sudo apt update && sudo apt install -qq --yes socat ebtables ethtool conntrack

      - name: Run test make target
        run: make test

      - name: Upload test coverage
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: cover.out
          verbose: true
