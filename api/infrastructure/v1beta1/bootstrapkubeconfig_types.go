// Copyright 2022 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

const (
	// DefaultClusterName is the cluster name used in the generated bootstrap-kubeconfig
	DefaultClusterName = "default-cluster"

	// DefaultContext is the context name used in the generated bootstrap-kubeconfig
	DefaultContext = "default-context"

	// DefaultNamespace is the namespace used in the generated bootstrap-kubeconfig
	DefaultNamespace = "default"

	// DefaultAuth is the auth in the generated bootstrap-kubeconfig
	DefaultAuth = "default-auth"

	// BootstrapTokenDescription is the bootstrap token description for the secret that is generated
	BootstrapTokenDescription = "Token generated by cluster-api-provider-bringyourownhost"

	// BootstrapTokenExtraGroups is the byoh group that has access to create CertificateSigningRequest
	BootstrapTokenExtraGroups = "system:bootstrappers:byoh"
)

// BootstrapKubeconfigSpec defines the desired state of BootstrapKubeconfig
type BootstrapKubeconfigSpec struct {
	// APIServer is the address of the kubernetes cluster (https://hostname:port).
	APIServer string `json:"apiserver"`

	// InsecureSkipTLSVerify skips the validity check for the server's certificate. This will make your HTTPS connections insecure.
	// +optional
	// +kubebuilder:default=false
	InsecureSkipTLSVerify bool `json:"insecure-skip-tls-verify,omitempty"`

	// CertificateAuthorityData contains PEM-encoded certificate authority certificates.
	CertificateAuthorityData string `json:"certificate-authority-data"`
}

// BootstrapKubeconfigStatus defines the observed state of BootstrapKubeconfig
type BootstrapKubeconfigStatus struct {
	// BootstrapKubeconfigData is an optional reference to a bootstrap kubeconfig info
	// for starting the host registration process
	// +optional
	BootstrapKubeconfigData *string `json:"bootstrapKubeconfigData,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status

// BootstrapKubeconfig is the Schema for the bootstrapkubeconfigs API
type BootstrapKubeconfig struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   BootstrapKubeconfigSpec   `json:"spec,omitempty"`
	Status BootstrapKubeconfigStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BootstrapKubeconfigList contains a list of BootstrapKubeconfig
type BootstrapKubeconfigList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BootstrapKubeconfig `json:"items"`
}

func init() {
	SchemeBuilder.Register(&BootstrapKubeconfig{}, &BootstrapKubeconfigList{})
}
